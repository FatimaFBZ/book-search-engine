{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fatim\\\\Desktop\\\\booksearchengine\\\\client\\\\src\\\\pages\\\\SearchBooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved bookId values\n\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook] = useMutation(SAVE_BOOK); // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  }); // create method to search for books and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  }; // create function to handle saving a book to our database\n\n\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {\n        data\n      } = await saveBook({\n        variables: {\n          bookToSave: bookToSave\n        }\n      });\n\n      if (error) {\n        throw new Error('something went wrong');\n      } // if book successfully saves to user's account, save book id to state\n\n\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Search for Books!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, searchedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, book.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, (savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId)) ? 'This book has already been saved!' : 'Save this Book!')));\n  }))));\n};\n\nexport default SearchBooks;","map":{"version":3,"sources":["C:/Users/Fatim/Desktop/booksearchengine/client/src/pages/SearchBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBook","searchGoogleBooks","saveBookIds","getSavedBookIds","useMutation","SAVE_BOOK","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","data","variables","e","target","value","length","some","savedBookId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\n\r\nimport Auth from '../utils/auth';\r\nimport { saveBook, searchGoogleBooks } from '../utils/API';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\n\r\nimport {useMutation} from '@apollo/client';\r\nimport {SAVE_BOOK} from '../utils/mutations'\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  const [saveBook]= useMutation(SAVE_BOOK)\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchGoogleBooks(searchInput);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || ['No author to display'],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n    const {data}= await saveBook({\r\n      variables: {bookToSave: bookToSave}\r\n    });\r\n\r\n\r\n\r\n    \r\n    if(error){\r\n      throw new Error ('something went wrong')\r\n    }\r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n"]},"metadata":{},"sourceType":"module"}